import * as Color from "color";
interface IColorOperations {
    /** Manipulate a color. */
    readonly manipulate: (manipulation: (color: Color) => Color, condition?: boolean) => IColorOperations;
    /** Evaluates the color and makes it black or white. */
    readonly makeBlackOrWhite: (condition?: boolean) => IColorOperations;
    /** Specifies a color in case the color is transparent. */
    readonly makeUnclear: (color?: string) => IColorOperations;
}
export declare const getColor: (input: string | undefined) => import("color")<string>;
/**
 * Normalizes a color to a RGB(A) value.
 * @param input Specifies the input color (can be a hex, rgb, hsl or color name).
 * @param operations Optional operations to perform.
 */
export declare const color: (input: string | undefined, operations?: ((color: IColorOperations) => void) | undefined) => string;
export {};
