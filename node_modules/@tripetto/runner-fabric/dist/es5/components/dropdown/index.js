"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DropdownFabric = void 0;
var tslib_1 = require("tslib");
var jsx_runtime_1 = require("react/jsx-runtime");
var styled_components_1 = require("styled-components");
var react_1 = require("react");
var runner_1 = require("@tripetto/runner");
var color_1 = require("../../color");
var dropdown_1 = require("../../icons/dropdown");
var warning_1 = require("../../icons/warning");
var const_1 = require("../const");
var SelectElement = styled_components_1.styled.select(
    templateObject_1 ||
        (templateObject_1 = tslib_1.__makeTemplateObject(
            [
                "\n    appearance: none;\n    outline: none;\n    box-sizing: border-box;\n    display: block;\n    width: 100%;\n    font-size: 1em;\n    line-height: 1.5em;\n    background-color: ",
                ";\n    background-image: ",
                ";\n    background-repeat: no-repeat;\n    background-size: 1em, ",
                "em;\n    background-position:\n        right 0.375em center,\n        right 1.75em center;\n    border: ",
                ";\n    border-radius: ",
                ";\n    color: ",
                ";\n    padding: ",
                ";\n    padding-right: ",
                ";\n    margin: 0;\n    opacity: 0.65;\n    transition:\n        background-color 0.15s ease-in-out,\n        border-color 0.15s ease-in-out,\n        box-shadow 0.15s ease-in-out,\n        opacity 0.15s ease-in-out;\n\n    &::-ms-expand {\n        display: none;\n    }\n\n    > option {\n        background-color: ",
                ";\n        color: ",
                ";\n    }\n\n    &:not(:disabled) {\n        opacity: 1;\n\n        &:hover {\n            box-shadow: ",
                ";\n        }\n\n        &:focus {\n            background-color: ",
                ";\n            background-image: ",
                ";\n            border-color: ",
                ";\n            color: ",
                ";\n            box-shadow: ",
                ";\n        }\n    }\n",
            ],
            [
                "\n    appearance: none;\n    outline: none;\n    box-sizing: border-box;\n    display: block;\n    width: 100%;\n    font-size: 1em;\n    line-height: 1.5em;\n    background-color: ",
                ";\n    background-image: ",
                ";\n    background-repeat: no-repeat;\n    background-size: 1em, ",
                "em;\n    background-position:\n        right 0.375em center,\n        right 1.75em center;\n    border: ",
                ";\n    border-radius: ",
                ";\n    color: ",
                ";\n    padding: ",
                ";\n    padding-right: ",
                ";\n    margin: 0;\n    opacity: 0.65;\n    transition:\n        background-color 0.15s ease-in-out,\n        border-color 0.15s ease-in-out,\n        box-shadow 0.15s ease-in-out,\n        opacity 0.15s ease-in-out;\n\n    &::-ms-expand {\n        display: none;\n    }\n\n    > option {\n        background-color: ",
                ";\n        color: ",
                ";\n    }\n\n    &:not(:disabled) {\n        opacity: 1;\n\n        &:hover {\n            box-shadow: ",
                ";\n        }\n\n        &:focus {\n            background-color: ",
                ";\n            background-image: ",
                ";\n            border-color: ",
                ";\n            color: ",
                ";\n            box-shadow: ",
                ";\n        }\n    }\n",
            ]
        )),
    function (props) {
        return (0, color_1.color)(
            props.$error && props.$backgroundColor !== "transparent" && props.$borderColor === "transparent"
                ? props.$errorColor
                : props.$backgroundColor
        );
    },
    function (props) {
        return (
            'url("data:image/svg+xml;base64,'.concat(
                (0, dropdown_1.dropdownIcon)(
                    (0, color_1.color)(
                        props.$textColor
                            ? props.$textColor
                            : props.$borderColor && props.$borderColor !== "transparent"
                            ? props.$borderColor
                            : (0, color_1.color)(props.$backgroundColor, function (o) {
                                  return o.makeBlackOrWhite();
                              })
                    )
                ),
                '")'
            ) +
            (props.$error
                ? ',url("data:image/svg+xml;base64,'.concat(
                      (0, warning_1.warningIcon)(
                          (0, color_1.color)(props.$errorColor, function (o) {
                              return o.makeBlackOrWhite(props.$backgroundColor !== "transparent" && props.$borderColor === "transparent");
                          })
                      ),
                      '")'
                  )
                : "")
        );
    },
    8 / 7,
    function (props) {
        return ""
            .concat(props.$backgroundColor === "transparent" && props.$borderColor === "transparent" ? 0 : props.$borderSize, "px solid ")
            .concat(
                (0, color_1.color)(
                    props.$error
                        ? props.$errorColor
                        : props.$borderColor && props.$borderColor !== "transparent"
                        ? props.$borderColor
                        : props.$backgroundColor
                )
            );
    },
    function (props) {
        return (0, runner_1.isNumberFinite)(props.$roundness) ? "".concat(props.$roundness, "px") : "0.5em";
    },
    function (props) {
        return (0, color_1.color)(
            props.$error
                ? props.$backgroundColor !== "transparent" && props.$borderColor === "transparent"
                    ? (0, color_1.color)(props.$errorColor, function (o) {
                          return o.makeBlackOrWhite();
                      })
                    : props.$errorColor
                : props.$textColor
                ? props.$textColor
                : props.$borderColor && props.$borderColor !== "transparent"
                ? props.$borderColor
                : (0, color_1.color)(props.$backgroundColor, function (o) {
                      return o.makeBlackOrWhite();
                  }),
            function (o) {
                return o.manipulate(function (m) {
                    return m.alpha(0.5);
                }, props.$placeholder && !props.$error);
            }
        );
    },
    function (props) {
        return props.$backgroundColor === "transparent" && props.$borderColor === "transparent"
            ? "0 1.75em 0 0"
            : "".concat(0.375 * props.$scale, "em 1.75em ").concat(0.375 * props.$scale, "em 0.75em");
    },
    function (props) {
        return (props.$error && "".concat(1.75 + 8 / 7 + 0.375, "em")) || undefined;
    },
    function (props) {
        return (0, color_1.color)(props.$backgroundColor);
    },
    function (props) {
        return (0, color_1.color)(
            props.$textColor
                ? props.$textColor
                : props.$borderColor && props.$borderColor !== "transparent"
                ? props.$borderColor
                : (0, color_1.color)(props.$backgroundColor, function (o) {
                      return o.makeBlackOrWhite();
                  })
        );
    },
    function (props) {
        return (
            ((props.$backgroundColor !== "transparent" || props.$borderColor !== "transparent") &&
                "0 0 0 0.2rem ".concat(
                    (0, color_1.color)(
                        props.$error
                            ? props.$errorColor
                            : props.$borderColor && props.$borderColor !== "transparent"
                            ? props.$borderColor
                            : props.$backgroundColor,
                        function (o) {
                            return o.manipulate(function (m) {
                                return m.alpha(0.2);
                            });
                        }
                    )
                )) ||
            undefined
        );
    },
    function (props) {
        return (0, color_1.color)(props.$backgroundColor);
    },
    function (props) {
        return (
            (!props.$errorVisible &&
                'url("data:image/svg+xml;base64,'.concat(
                    (0, dropdown_1.dropdownIcon)(
                        (0, color_1.color)(
                            props.$textColor
                                ? props.$textColor
                                : props.$borderColor && props.$borderColor !== "transparent"
                                ? props.$borderColor
                                : (0, color_1.color)(props.$backgroundColor, function (o) {
                                      return o.makeBlackOrWhite();
                                  })
                        )
                    ),
                    '")'
                )) ||
            undefined
        );
    },
    function (props) {
        return (0, color_1.color)(props.$borderColor && props.$borderColor !== "transparent" ? props.$borderColor : props.$backgroundColor);
    },
    function (props) {
        return (0, color_1.color)(
            props.$textColor
                ? props.$textColor
                : props.$borderColor && props.$borderColor !== "transparent"
                ? props.$borderColor
                : (0, color_1.color)(props.$backgroundColor, function (o) {
                      return o.makeBlackOrWhite();
                  }),
            function (o) {
                return o.manipulate(function (m) {
                    return m.alpha(0.5);
                }, props.$placeholder);
            }
        );
    },
    function (props) {
        return (
            ((props.$backgroundColor !== "transparent" || props.$borderColor !== "transparent") &&
                "0 0 0 0.2rem ".concat(
                    (0, color_1.color)(
                        props.$borderColor && props.$borderColor !== "transparent" ? props.$borderColor : props.$backgroundColor,
                        function (o) {
                            return o.manipulate(function (m) {
                                return m.alpha(0.5);
                            });
                        }
                    )
                )) ||
            undefined
        );
    }
);
var PlaceholderElement = styled_components_1.styled.option(
    templateObject_2 ||
        (templateObject_2 = tslib_1.__makeTemplateObject(["\n    color: ", " !important;\n"], ["\n    color: ", " !important;\n"])),
    function (props) {
        return (0, color_1.color)(
            props.$textColor
                ? props.$textColor
                : props.$borderColor && props.$borderColor !== "transparent"
                ? props.$borderColor
                : (0, color_1.color)(props.$backgroundColor, function (o) {
                      return o.makeBlackOrWhite();
                  }),
            function (o) {
                return o.manipulate(function (m) {
                    return m.alpha(0.5);
                });
            }
        );
    }
);
var assertValue = function (valueRef, props, reference) {
    var selected = (0, runner_1.findFirst)(props.options, function (option) {
        return option.id === reference;
    });
    if (!selected && !props.placeholder && props.options.length > 0) {
        var defaultOption = (0, runner_1.findFirst)(props.options, function (option) {
            return option.name ? true : false;
        });
        if (defaultOption) {
            valueRef.default(defaultOption.value || defaultOption.name, defaultOption.id, defaultOption.name);
        }
    } else if (valueRef.reference !== (selected === null || selected === void 0 ? void 0 : selected.id)) {
        valueRef.set(
            selected && (selected.value || selected.name),
            selected === null || selected === void 0 ? void 0 : selected.id,
            selected === null || selected === void 0 ? void 0 : selected.name
        );
    }
    return (selected && selected.id) || "";
};
var DropdownFabric = function (props) {
    var valueRef = props.value;
    var debounceRef = (0, react_1.useRef)(0);
    var _a = (0, react_1.useState)((typeof valueRef !== "object" && valueRef) || ""),
        proxy = _a[0],
        setProxy = _a[1];
    var _b =
            typeof valueRef === "object"
                ? [
                      debounceRef.current !== 0 ? proxy : assertValue(valueRef, props, valueRef.reference),
                      function (reference) {
                          (0, runner_1.cancelUITimeout)(debounceRef.current);
                          setProxy(reference);
                          debounceRef.current = (0, runner_1.scheduleUITimeout)(function () {
                              debounceRef.current = 0;
                              assertValue(valueRef, props, reference);
                          }, const_1.DEBOUNCE_NORMAL);
                      },
                  ]
                : [proxy, setProxy],
        value = _b[0],
        setValue = _b[1];
    var _c = (0, react_1.useState)(value ? true : false),
        errorVisible = _c[0],
        makeErrorVisible = _c[1];
    (0, react_1.useEffect)(function () {
        return function () {
            (0, runner_1.cancelUITimeout)(debounceRef.current);
        };
    }, []);
    return (0, jsx_runtime_1.jsxs)(SelectElement, {
        id: props.id,
        ref: props.onAutoFocus,
        tabIndex: props.tabIndex,
        required: props.required || false,
        disabled: props.disabled || props.readOnly || (typeof valueRef === "object" && (valueRef.isFrozen || valueRef.isLocked)) || false,
        value: value,
        "aria-describedby": props.ariaDescribedBy,
        onChange: function (e) {
            setValue(e.target.value);
            makeErrorVisible(true);
            if (props.onChange) {
                props.onChange(e.target.value);
            }
        },
        onFocus: props.onFocus,
        onBlur: props.onBlur,
        onKeyDown: function (e) {
            if (e.shiftKey && e.key === "Enter" && props.onSubmit) {
                e.preventDefault();
                props.onSubmit();
            } else if (e.key === "Escape") {
                e.currentTarget.blur();
            } else if (e.key === "Tab") {
                if (e.shiftKey) {
                    if (props.onCancel) {
                        e.preventDefault();
                        props.onCancel();
                    }
                } else if (props.onSubmit) {
                    e.preventDefault();
                    props.onSubmit();
                }
            }
        },
        $backgroundColor: props.styles.backgroundColor || "transparent",
        $borderColor: props.styles.borderColor || "transparent",
        $borderSize: props.styles.borderSize || 1,
        $roundness: props.styles.roundness,
        $textColor: props.styles.textColor,
        $errorColor: props.styles.errorColor,
        $errorVisible: errorVisible,
        $error: props.error || false,
        $scale: props.styles.scale || 1,
        $placeholder: (props.placeholder && value === "") || false,
        children: [
            props.placeholder &&
                (0, jsx_runtime_1.jsx)(PlaceholderElement, {
                    value: "",
                    $backgroundColor: props.styles.backgroundColor || "transparent",
                    $borderColor: props.styles.borderColor || "transparent",
                    $textColor: props.styles.textColor,
                    $errorColor: props.styles.errorColor,
                    $error: props.error || false,
                    children: props.placeholder,
                }),
            props.options.map(function (option, index) {
                return option.name && option.id && (0, jsx_runtime_1.jsx)("option", { value: option.id, children: option.name }, index);
            }),
        ],
    });
};
exports.DropdownFabric = DropdownFabric;
var templateObject_1, templateObject_2;
