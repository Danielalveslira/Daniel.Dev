"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RatingFabric = void 0;
var tslib_1 = require("tslib");
var jsx_runtime_1 = require("react/jsx-runtime");
var styled_components_1 = require("styled-components");
var react_1 = require("react");
var runner_1 = require("@tripetto/runner");
var helpers_1 = require("../helpers");
var color_1 = require("../../color");
var star_1 = require("../../shapes/star");
var heart_1 = require("../../shapes/heart");
var thumbs_up_1 = require("../../shapes/thumbs-up");
var thumbs_down_1 = require("../../shapes/thumbs-down");
var person_1 = require("../../shapes/person");
var const_1 = require("../const");
var RatingElement = styled_components_1.styled.div(
    templateObject_1 ||
        (templateObject_1 = tslib_1.__makeTemplateObject(
            ["\n    display: block;\n    width: 100%;\n"],
            ["\n    display: block;\n    width: 100%;\n"]
        ))
);
var RatingShapeElement = styled_components_1.styled.button(
    templateObject_4 ||
        (templateObject_4 = tslib_1.__makeTemplateObject(
            [
                "\n    appearance: none;\n    box-sizing: border-box;\n    background: none;\n    border: none;\n    outline: none;\n    width: ",
                ";\n    height: ",
                ";\n    margin: 0;\n    padding: 0;\n    margin-bottom: ",
                ";\n    display: inline-block;\n    opacity: 0.2;\n    cursor: default;\n    transition:\n        width 0.15s ease-in-out,\n        height 0.15s ease-in-out,\n        opacity 0.15 ease-in-out;\n\n    > svg {\n        path {\n            fill: ",
                ";\n            stroke: ",
                ";\n            stroke-width: 1px;\n            transition:\n                fill 0.15s ease-in-out,\n                stroke 0.15s ease-in-out;\n        }\n    }\n\n    > small {\n        display: block;\n        font-size: 0.8em;\n        line-height: 1em;\n        text-align: center;\n        margin: 0;\n        padding: 0;\n        color: ",
                ";\n    }\n\n    animation: ",
                ";\n\n    &:not(:disabled) {\n        opacity: 1;\n        cursor: pointer;\n\n        &:focus {\n            > svg {\n                path {\n                    stroke-width: ",
                ";\n                    fill: ",
                ";\n                    stroke: ",
                ";\n                }\n            }\n        }\n    }\n",
            ],
            [
                "\n    appearance: none;\n    box-sizing: border-box;\n    background: none;\n    border: none;\n    outline: none;\n    width: ",
                ";\n    height: ",
                ";\n    margin: 0;\n    padding: 0;\n    margin-bottom: ",
                ";\n    display: inline-block;\n    opacity: 0.2;\n    cursor: default;\n    transition:\n        width 0.15s ease-in-out,\n        height 0.15s ease-in-out,\n        opacity 0.15 ease-in-out;\n\n    > svg {\n        path {\n            fill: ",
                ";\n            stroke: ",
                ";\n            stroke-width: 1px;\n            transition:\n                fill 0.15s ease-in-out,\n                stroke 0.15s ease-in-out;\n        }\n    }\n\n    > small {\n        display: block;\n        font-size: 0.8em;\n        line-height: 1em;\n        text-align: center;\n        margin: 0;\n        padding: 0;\n        color: ",
                ";\n    }\n\n    animation: ",
                ";\n\n    &:not(:disabled) {\n        opacity: 1;\n        cursor: pointer;\n\n        &:focus {\n            > svg {\n                path {\n                    stroke-width: ",
                ";\n                    fill: ",
                ";\n                    stroke: ",
                ";\n                }\n            }\n        }\n    }\n",
            ]
        )),
    function (props) {
        return "".concat(2 * props.$scale, "em");
    },
    function (props) {
        return "".concat(2 * props.$scale, "em");
    },
    function (props) {
        return props.$showLabels && "1em";
    },
    function (props) {
        return (
            (props.$checked && (0, color_1.color)(props.$color)) ||
            (props.$hover &&
                (0, color_1.color)(props.$color, function (o) {
                    return o.manipulate(function (m) {
                        return m.alpha(0.3);
                    });
                })) ||
            "none"
        );
    },
    function (props) {
        return (0, color_1.color)(props.$color);
    },
    function (props) {
        return (0, color_1.color)(props.$color);
    },
    function (props) {
        return props.$checked
            ? (0, styled_components_1.css)(
                  templateObject_3 ||
                      (templateObject_3 = tslib_1.__makeTemplateObject(
                          ["\n                  ", " .5s linear\n              "],
                          ["\n                  ", " .5s linear\n              "]
                      )),
                  (0, styled_components_1.keyframes)(
                      templateObject_2 ||
                          (templateObject_2 = tslib_1.__makeTemplateObject(
                              [
                                  "\n                        50% {\n                            transform: scale(1.1);\n                        }\n\n                        100% {\n                            transform: none;\n                        }\n                    ",
                              ],
                              [
                                  "\n                        50% {\n                            transform: scale(1.1);\n                        }\n\n                        100% {\n                            transform: none;\n                        }\n                    ",
                              ]
                          ))
                  )
              )
            : undefined;
    },
    function (props) {
        return (props.$checked && "2px") || undefined;
    },
    function (props) {
        return (
            (!props.$checked &&
                (0, color_1.color)(props.$color, function (o) {
                    return o.manipulate(function (m) {
                        return m.alpha(0.3);
                    });
                })) ||
            undefined
        );
    },
    function (props) {
        return (
            (props.$checked &&
                (0, color_1.color)(props.$color, function (o) {
                    return o.manipulate(function (m) {
                        return m.alpha(0.3);
                    });
                })) ||
            undefined
        );
    }
);
var getShape = function (shape) {
    switch (shape) {
        case "stars":
            return star_1.starShape;
        case "hearts":
            return heart_1.heartShape;
        case "thumbs-up":
            return thumbs_up_1.thumbsUpShape;
        case "thumbs-down":
            return thumbs_down_1.thumbsDownShape;
        case "persons":
            return person_1.personShape;
    }
};
var assertValue = function (valueRef, value) {
    if (value) {
        return (valueRef.value = value);
    }
    valueRef.clear();
    return 0;
};
var RatingFabric = function (props) {
    var valueRef = props.value;
    var debounceRef = (0, react_1.useRef)(0);
    var _a = (0, react_1.useState)((typeof valueRef !== "object" && valueRef) || 0),
        proxy = _a[0],
        setProxy = _a[1];
    var _b =
            typeof valueRef === "object"
                ? [
                      debounceRef.current !== 0 ? proxy : assertValue(valueRef, valueRef.value),
                      function (val, submit) {
                          (0, runner_1.cancelUITimeout)(debounceRef.current);
                          setProxy(val);
                          debounceRef.current = (0, runner_1.scheduleUITimeout)(function () {
                              debounceRef.current = 0;
                              assertValue(valueRef, val);
                              if (submit && props.autoSubmit && val) {
                                  (0, helpers_1.handleAutoSubmit)(autoSubmit);
                              }
                          }, const_1.DEBOUNCE_NORMAL);
                      },
                  ]
                : [proxy, setProxy],
        value = _b[0],
        setValue = _b[1];
    var _c = (0, react_1.useState)(0),
        hover = _c[0],
        setHover = _c[1];
    var items = [];
    var autoSubmit = (0, react_1.useRef)({
        id: 0,
        cb: props.onSubmit,
    });
    var steps = runner_1.Num.max(1, props.steps);
    var isDisabled =
        props.disabled || props.readOnly || (typeof valueRef === "object" && (valueRef.isFrozen || valueRef.isLocked)) || false;
    var changeValue = function (val, submit) {
        if (props.disabled || props.readOnly) {
            return;
        }
        val = runner_1.Num.range(val, 0, steps);
        if (autoSubmit.current.id) {
            clearTimeout(autoSubmit.current.id);
            autoSubmit.current.id = 0;
        }
        setValue(val, submit);
        if (props.onChange) {
            props.onChange(val);
        }
        if (submit && props.autoSubmit && val) {
            (0, helpers_1.handleAutoSubmit)(autoSubmit);
        }
    };
    (0, react_1.useEffect)(function () {
        return function () {
            (0, runner_1.cancelUITimeout)(debounceRef.current);
        };
    }, []);
    var _loop_1 = function (i) {
        items.push(
            (0, jsx_runtime_1.jsxs)(
                RatingShapeElement,
                {
                    ref: (i === (value || 1) && props.onAutoFocus) || undefined,
                    disabled: isDisabled,
                    tabIndex: props.tabIndex,
                    "aria-describedby": props.ariaDescribedBy,
                    onMouseOver: function () {
                        return setHover(i);
                    },
                    onMouseOut: function () {
                        return setHover(0);
                    },
                    onClick: function () {
                        return changeValue(value === 1 && !props.required ? 0 : i, true);
                    },
                    onFocus: props.onFocus,
                    onBlur: props.onBlur,
                    onKeyDown: function (e) {
                        if (e.shiftKey && e.key === "Enter" && props.onSubmit) {
                            e.preventDefault();
                            props.onSubmit();
                        } else if (e.key === "Enter" || e.key === " ") {
                            e.preventDefault();
                            changeValue(value === 1 && !props.required ? 0 : i, true);
                        } else if (e.key === "Escape") {
                            e.currentTarget.blur();
                        } else if (e.key === "Tab") {
                            if (e.shiftKey) {
                                if (props.onCancel && i === 1) {
                                    e.preventDefault();
                                    props.onCancel();
                                }
                            } else if (props.onSubmit && i === steps) {
                                e.preventDefault();
                                props.onSubmit();
                            }
                        } else {
                            if (e.key === "-") {
                                if (value > 0) {
                                    changeValue(value - 1, false);
                                }
                            } else if (e.key === "+") {
                                if (value < steps) {
                                    changeValue(value + 1, false);
                                }
                            } else {
                                var n = e.key.length === 1 ? e.key.charCodeAt(0) - 48 : -1;
                                if (n >= 0 && n <= 9) {
                                    changeValue(value === n ? n - 1 : n, true);
                                }
                            }
                        }
                    },
                    $color: props.styles.color,
                    $scale: props.styles.scale || 1,
                    $hover: !isDisabled && hover >= i,
                    $checked: i <= value,
                    $showLabels: props.showLabels || false,
                    children: [getShape(props.shape || "stars"), props.showLabels && (0, jsx_runtime_1.jsx)("small", { children: i })],
                },
                i
            )
        );
    };
    for (var i = 1; i <= steps; i++) {
        _loop_1(i);
    }
    autoSubmit.current.cb = props.onSubmit;
    return (0, jsx_runtime_1.jsx)(RatingElement, { children: items });
};
exports.RatingFabric = RatingFabric;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
