"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileFabric = exports.FileThumbnailFabric = void 0;
var tslib_1 = require("tslib");
var jsx_runtime_1 = require("react/jsx-runtime");
var styled_components_1 = require("styled-components");
var react_1 = require("react");
var runner_1 = require("@tripetto/runner");
var color_1 = require("../../color");
var button_1 = require("../button");
var warning_1 = require("../../icons/warning");
var file_1 = require("../../icons/file");
var upload_1 = require("../../icons/upload");
var FileElement = styled_components_1.styled.div(
    templateObject_1 ||
        (templateObject_1 = tslib_1.__makeTemplateObject(
            [
                "\n    outline: none;\n    box-sizing: border-box;\n    display: block;\n    width: 100%;\n    height: ",
                ";\n    position: relative;\n    overflow: hidden;\n    font-size: 1em;\n    line-height: 1.5em;\n    background-color: ",
                ";\n    background-image: ",
                ";\n    background-repeat: no-repeat;\n    background-size: ",
                "em;\n    background-position: right 0.375em top 0.375em;\n    border: ",
                ";\n    color: ",
                ";\n    border-radius: ",
                ";\n    padding: ",
                ";\n    margin: 0;\n    opacity: ",
                ";\n    transition:\n        color 0.15s ease-in-out,\n        background-color 0.15s ease-in-out,\n        border-color 0.15s ease-in-out,\n        box-shadow 0.15s ease-in-out,\n        opacity 0.15s ease-in-out;\n    cursor: default;\n\n    svg {\n        fill: ",
                ";\n        transition: fill 0.15s ease-in-out;\n    }\n\n    > div,\n    > label {\n        position: absolute;\n        left: 0.75em;\n        right: 0.75em;\n        top: 0.75em;\n        bottom: 0.75em;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n\n    &:hover {\n        box-shadow: ",
                ";\n    }\n\n    &:focus {\n        background-color: ",
                ";\n        background-image: ",
                ";\n        border-color: ",
                ";\n        color: ",
                ";\n        box-shadow: ",
                ";\n    }\n",
            ],
            [
                "\n    outline: none;\n    box-sizing: border-box;\n    display: block;\n    width: 100%;\n    height: ",
                ";\n    position: relative;\n    overflow: hidden;\n    font-size: 1em;\n    line-height: 1.5em;\n    background-color: ",
                ";\n    background-image: ",
                ";\n    background-repeat: no-repeat;\n    background-size: ",
                "em;\n    background-position: right 0.375em top 0.375em;\n    border: ",
                ";\n    color: ",
                ";\n    border-radius: ",
                ";\n    padding: ",
                ";\n    margin: 0;\n    opacity: ",
                ";\n    transition:\n        color 0.15s ease-in-out,\n        background-color 0.15s ease-in-out,\n        border-color 0.15s ease-in-out,\n        box-shadow 0.15s ease-in-out,\n        opacity 0.15s ease-in-out;\n    cursor: default;\n\n    svg {\n        fill: ",
                ";\n        transition: fill 0.15s ease-in-out;\n    }\n\n    > div,\n    > label {\n        position: absolute;\n        left: 0.75em;\n        right: 0.75em;\n        top: 0.75em;\n        bottom: 0.75em;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n\n    &:hover {\n        box-shadow: ",
                ";\n    }\n\n    &:focus {\n        background-color: ",
                ";\n        background-image: ",
                ";\n        border-color: ",
                ";\n        color: ",
                ";\n        box-shadow: ",
                ";\n    }\n",
            ]
        )),
    function (props) {
        return "".concat(14 * props.$scale, "em");
    },
    function (props) {
        return (0, color_1.color)(props.$backgroundColor);
    },
    function (props) {
        return props.$error
            ? 'url("data:image/svg+xml;base64,'.concat(
                  (0, warning_1.warningIcon)(
                      (0, color_1.color)(props.$errorColor, function (o) {
                          return o.makeBlackOrWhite(props.$backgroundColor !== "transparent" && props.$borderColor === "transparent");
                      })
                  ),
                  '")'
              )
            : undefined;
    },
    8 / 7,
    function (props) {
        return ""
            .concat(props.$backgroundColor === "transparent" && props.$borderColor === "transparent" ? 0 : props.$borderSize, "px solid ")
            .concat(
                (0, color_1.color)(props.$borderColor && props.$borderColor !== "transparent" ? props.$borderColor : props.$backgroundColor)
            );
    },
    function (props) {
        return (0, color_1.color)(
            props.$textColor
                ? props.$textColor
                : props.$borderColor && props.$borderColor !== "transparent"
                ? props.$borderColor
                : (0, color_1.color)(props.$backgroundColor, function (o) {
                      return o.makeBlackOrWhite();
                  })
        );
    },
    function (props) {
        return (0, runner_1.isNumberFinite)(props.$roundness) ? "".concat(props.$roundness, "px") : "0.5em";
    },
    function (props) {
        return props.$backgroundColor === "transparent" && props.$borderColor === "transparent"
            ? "0"
            : "".concat(0.375 * props.$scale, "em 0.75em");
    },
    function (props) {
        return props.$disabled ? 0.65 : 1;
    },
    function (props) {
        return (0, color_1.color)(
            props.$textColor
                ? props.$textColor
                : props.$borderColor && props.$borderColor !== "transparent"
                ? props.$borderColor
                : (0, color_1.color)(props.$backgroundColor, function (o) {
                      return o.makeBlackOrWhite();
                  })
        );
    },
    function (props) {
        return (
            (!props.$disabled &&
                (props.$backgroundColor !== "transparent" || props.$borderColor !== "transparent") &&
                "0 0 0 0.2rem ".concat(
                    (0, color_1.color)(
                        props.$borderColor && props.$borderColor !== "transparent" ? props.$borderColor : props.$backgroundColor,
                        function (o) {
                            return o.manipulate(function (m) {
                                return m.alpha(0.2);
                            });
                        }
                    )
                )) ||
            undefined
        );
    },
    function (props) {
        return (!props.$disabled && (0, color_1.color)(props.$backgroundColor)) || undefined;
    },
    function (props) {
        return (!props.$errorVisible && "none") || undefined;
    },
    function (props) {
        return (
            (!props.$disabled &&
                (0, color_1.color)(
                    props.$borderColor && props.$borderColor !== "transparent" ? props.$borderColor : props.$backgroundColor
                )) ||
            undefined
        );
    },
    function (props) {
        return (
            (!props.$disabled &&
                (0, color_1.color)(
                    props.$textColor
                        ? props.$textColor
                        : props.$borderColor && props.$borderColor !== "transparent"
                        ? props.$borderColor
                        : (0, color_1.color)(props.$backgroundColor, function (o) {
                              return o.makeBlackOrWhite();
                          })
                )) ||
            undefined
        );
    },
    function (props) {
        return (
            (!props.$disabled &&
                (props.$backgroundColor !== "transparent" || props.$borderColor !== "transparent") &&
                "0 0 0 0.2rem ".concat(
                    (0, color_1.color)(
                        props.$borderColor && props.$borderColor !== "transparent" ? props.$borderColor : props.$backgroundColor,
                        function (o) {
                            return o.manipulate(function (m) {
                                return m.alpha(0.5);
                            });
                        }
                    )
                )) ||
            undefined
        );
    }
);
var FileBrowseElement = styled_components_1.styled.label(
    templateObject_2 ||
        (templateObject_2 = tslib_1.__makeTemplateObject(
            [
                "\n    cursor: pointer;\n\n    * {\n        pointer-events: none;\n    }\n\n    > svg {\n        display: block;\n        height: ",
                ";\n        margin-bottom: 0.375em;\n    }\n\n    > input {\n        width: 1px;\n        height: 1px;\n        opacity: 0;\n        overflow: hidden;\n        position: absolute;\n        z-index: -1;\n    }\n\n    > span {\n        display: block;\n        text-align: center;\n    }\n\n    > small {\n        display: block;\n        text-align: center;\n    }\n",
            ],
            [
                "\n    cursor: pointer;\n\n    * {\n        pointer-events: none;\n    }\n\n    > svg {\n        display: block;\n        height: ",
                ";\n        margin-bottom: 0.375em;\n    }\n\n    > input {\n        width: 1px;\n        height: 1px;\n        opacity: 0;\n        overflow: hidden;\n        position: absolute;\n        z-index: -1;\n    }\n\n    > span {\n        display: block;\n        text-align: center;\n    }\n\n    > small {\n        display: block;\n        text-align: center;\n    }\n",
            ]
        )),
    function (props) {
        return "".concat(5 * props.$scale, "em");
    }
);
var FileErrorElement = styled_components_1.styled.div(
    templateObject_3 ||
        (templateObject_3 = tslib_1.__makeTemplateObject(
            [
                "\n    > div {\n        display: block;\n        text-align: center;\n    }\n\n    > div:first-child {\n        font-weight: bold;\n    }\n\n    > div:last-of-type {\n        margin-bottom: 0.375em;\n    }\n",
            ],
            [
                "\n    > div {\n        display: block;\n        text-align: center;\n    }\n\n    > div:first-child {\n        font-weight: bold;\n    }\n\n    > div:last-of-type {\n        margin-bottom: 0.375em;\n    }\n",
            ]
        ))
);
var FileProgressElement = styled_components_1.styled.div(
    templateObject_4 ||
        (templateObject_4 = tslib_1.__makeTemplateObject(
            [
                "\n    > div {\n        display: inline-block;\n        width: 80%;\n        max-width: 300px;\n        height: 16px;\n        background-color: ",
                ";\n        border-radius: 4px;\n        overflow: hidden;\n        margin-bottom: 0.375em;\n\n        > div {\n            width: 0%;\n            height: 16px;\n            background-color: ",
                ";\n            background-image: linear-gradient(\n                45deg,\n                ",
                " 25%,\n                transparent 25%,\n                transparent 50%,\n                ",
                " 50%,\n                ",
                " 75%,\n                transparent 75%,\n                transparent\n            );\n            background-size: 1rem 1rem;\n            transition: width 0.5s ease-out;\n        }\n    }\n\n    > span {\n        display: block;\n        text-align: center;\n    }\n",
            ],
            [
                "\n    > div {\n        display: inline-block;\n        width: 80%;\n        max-width: 300px;\n        height: 16px;\n        background-color: ",
                ";\n        border-radius: 4px;\n        overflow: hidden;\n        margin-bottom: 0.375em;\n\n        > div {\n            width: 0%;\n            height: 16px;\n            background-color: ",
                ";\n            background-image: linear-gradient(\n                45deg,\n                ",
                " 25%,\n                transparent 25%,\n                transparent 50%,\n                ",
                " 50%,\n                ",
                " 75%,\n                transparent 75%,\n                transparent\n            );\n            background-size: 1rem 1rem;\n            transition: width 0.5s ease-out;\n        }\n    }\n\n    > span {\n        display: block;\n        text-align: center;\n    }\n",
            ]
        )),
    function (props) {
        return (0, color_1.color)(props.$color, function (o) {
            return o.manipulate(function (m) {
                return m.alpha(0.25);
            });
        });
    },
    function (props) {
        return (0, color_1.color)(props.$color);
    },
    function (props) {
        return (0, color_1.color)(props.$color, function (o) {
            return o.makeBlackOrWhite().manipulate(function (m) {
                return m.alpha(0.25);
            });
        });
    },
    function (props) {
        return (0, color_1.color)(props.$color, function (o) {
            return o.makeBlackOrWhite().manipulate(function (m) {
                return m.alpha(0.25);
            });
        });
    },
    function (props) {
        return (0, color_1.color)(props.$color, function (o) {
            return o.makeBlackOrWhite().manipulate(function (m) {
                return m.alpha(0.25);
            });
        });
    }
);
var FilePreviewElement = styled_components_1.styled.div(
    templateObject_5 ||
        (templateObject_5 = tslib_1.__makeTemplateObject(
            [
                "\n    > img,\n    > svg {\n        display: block;\n        height: ",
                ";\n        margin: 0.375em;\n    }\n\n    > div {\n        display: block;\n        text-align: center;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n    > div:last-of-type {\n        margin-bottom: 0.75em;\n    }\n",
            ],
            [
                "\n    > img,\n    > svg {\n        display: block;\n        height: ",
                ";\n        margin: 0.375em;\n    }\n\n    > div {\n        display: block;\n        text-align: center;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n    > div:last-of-type {\n        margin-bottom: 0.75em;\n    }\n",
            ]
        )),
    function (props) {
        return "".concat(6 * props.$scale, "em");
    }
);
var FileThumbnailFabric = function (props) {
    var _a = (0, react_1.useState)({
            loading: props.controller.isImage,
            base64data: "",
        }),
        data = _a[0],
        setData = _a[1];
    (0, react_1.useEffect)(
        function () {
            if (props.controller.isImage) {
                if (!data.loading) {
                    setData({
                        loading: true,
                        base64data: "",
                    });
                }
                props.controller
                    .download(props.service)
                    .then(function (base64data) {
                        return setData({
                            loading: false,
                            base64data: base64data,
                        });
                    })
                    .catch(function () {
                        return setData({
                            loading: false,
                            base64data: "",
                        });
                    });
            }
        },
        [props.controller.fileSlot.reference]
    );
    if (data.loading) {
        return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: props.loading });
    }
    return (
        (data.base64data &&
            (props.host
                ? (0, jsx_runtime_1.jsx)(props.host, { children: (0, jsx_runtime_1.jsx)("img", { src: data.base64data }) })
                : (0, jsx_runtime_1.jsx)("img", { src: data.base64data }))) ||
        (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: props.error })
    );
};
exports.FileThumbnailFabric = FileThumbnailFabric;
var FileFabric = function (props) {
    var _a = (0, react_1.useState)(false),
        dragging = _a[0],
        setDragging = _a[1];
    var _b = (0, react_1.useState)(false),
        deleting = _b[0],
        setDeleting = _b[1];
    var _c = (0, react_1.useState)(-1),
        progress = _c[0],
        setProgress = _c[1];
    var _d = (0, react_1.useState)(""),
        error = _d[0],
        setError = _d[1];
    var _e = (0, react_1.useState)(false),
        errorVisible = _e[0],
        makeErrorVisible = _e[1];
    var inputRef = (0, react_1.useRef)();
    var disabled = props.disabled || props.controller.fileSlot.isFrozen || props.controller.fileSlot.isLocked || false;
    var baseColor = props.styles.textColor
        ? props.styles.textColor
        : props.styles.borderColor && props.styles.borderColor !== "transparent"
        ? props.styles.borderColor
        : (0, color_1.color)(props.styles.backgroundColor || "transparent", function (o) {
              return o.makeBlackOrWhite();
          });
    var handleUpload = function (files) {
        if (!disabled) {
            setProgress(0);
            makeErrorVisible(true);
            props.controller
                .upload(files, props.service, function (percent) {
                    return setProgress(runner_1.Num.floor(percent));
                })
                .then(function () {
                    return setProgress(-1);
                })
                .catch(function (err) {
                    setError(err);
                    setProgress(-1);
                });
        }
    };
    var handleDelete = function () {
        if (props.controller.fileSlot.hasValue && !error && progress === -1) {
            setDeleting(true);
            makeErrorVisible(true);
            props.controller
                .delete(props.service)
                .then(function () {
                    return setDeleting(false);
                })
                .catch(function () {
                    return setDeleting(false);
                });
        }
    };
    return (0, jsx_runtime_1.jsxs)(FileElement, {
        ref: props.onAutoFocus,
        tabIndex: props.tabIndex || 0,
        onFocus: props.onFocus,
        onBlur: props.onBlur,
        onKeyDown: function (e) {
            if (e.key === "Enter") {
                if (!e.shiftKey) {
                    if (!error && progress === -1) {
                        if (props.controller.fileSlot.hasValue && props.onSubmit) {
                            e.preventDefault();
                            props.onSubmit();
                        } else if (inputRef.current) {
                            e.preventDefault();
                            inputRef.current.click();
                        }
                    }
                } else if (props.onSubmit) {
                    e.preventDefault();
                    props.onSubmit();
                }
            } else if (e.key === "Escape") {
                e.currentTarget.blur();
            } else if (e.key === "Tab") {
                if (e.shiftKey) {
                    if (props.onCancel) {
                        e.preventDefault();
                        props.onCancel();
                    }
                } else if (props.onSubmit) {
                    e.preventDefault();
                    props.onSubmit();
                }
            } else if (e.key === "Delete" && props.controller.fileSlot.hasValue && !error && progress === -1) {
                e.preventDefault();
                handleDelete();
            }
        },
        $backgroundColor: props.styles.backgroundColor || "transparent",
        $borderColor: props.styles.borderColor || "transparent",
        $borderSize: props.styles.borderSize || 1,
        $roundness: props.styles.roundness,
        $textColor: props.styles.textColor,
        $errorColor: props.styles.errorColor,
        $errorVisible: errorVisible,
        $error: props.error || false,
        $scale: props.styles.scale || 1,
        $disabled: disabled,
        children: [
            !props.controller.fileSlot.hasValue &&
                !error &&
                progress === -1 &&
                (0, jsx_runtime_1.jsxs)(FileBrowseElement, {
                    onDragEnter: function (e) {
                        e.preventDefault();
                        e.stopPropagation();
                        if (!disabled && progress === -1) {
                            setDragging(true);
                        }
                    },
                    onDragOver: function (e) {
                        e.preventDefault();
                        e.stopPropagation();
                    },
                    onDragLeave: function (e) {
                        e.preventDefault();
                        e.stopPropagation();
                        setDragging(false);
                    },
                    onDrop: function (e) {
                        e.preventDefault();
                        e.stopPropagation();
                        setDragging(false);
                        if (!disabled && progress === -1) {
                            var files = e.dataTransfer.files;
                            if (files) {
                                handleUpload(files);
                            }
                        }
                    },
                    $scale: props.styles.scale || 1,
                    children: [
                        upload_1.uploadIcon,
                        (0, jsx_runtime_1.jsx)("input", {
                            ref: function (el) {
                                return (inputRef.current = el);
                            },
                            type: "file",
                            multiple: false,
                            tabIndex: -1,
                            disabled: disabled,
                            "aria-describedby": props.ariaDescribedBy,
                            onChange: function (e) {
                                if (e.target && e.target.files) {
                                    handleUpload(e.target.files);
                                }
                            },
                        }),
                        (0, jsx_runtime_1.jsx)("span", { children: props.labels(dragging ? "dragging" : "explanation", "") }),
                        props.controller.limit > 0 &&
                            (0, jsx_runtime_1.jsx)("small", { children: props.labels("limit", "".concat(props.controller.limit, "Mb")) }),
                        props.controller.allowedExtensions.length > 0 &&
                            (0, jsx_runtime_1.jsx)("small", {
                                children: props.labels(
                                    "extensions",
                                    runner_1.Str.iterateToString(props.controller.allowedExtensions, ", ")
                                ),
                            }),
                    ],
                }),
            !error &&
                progress !== -1 &&
                (0, jsx_runtime_1.jsxs)(FileProgressElement, {
                    onDragOver: function (e) {
                        e.preventDefault();
                    },
                    onDrop: function (e) {
                        e.preventDefault();
                    },
                    $color: baseColor,
                    children: [
                        (0, jsx_runtime_1.jsx)("div", {
                            children: (0, jsx_runtime_1.jsx)("div", {
                                style: {
                                    width: "".concat(runner_1.Num.range(progress, 0, 100), "%"),
                                },
                            }),
                        }),
                        (0, jsx_runtime_1.jsx)("span", {
                            children: props.labels("progress", "".concat(runner_1.Num.range(progress, 0, 100), "%")),
                        }),
                    ],
                }),
            error &&
                (0, jsx_runtime_1.jsxs)(FileErrorElement, {
                    onDragOver: function (e) {
                        e.preventDefault();
                    },
                    onDrop: function (e) {
                        e.preventDefault();
                    },
                    children: [
                        (0, jsx_runtime_1.jsx)("div", { children: props.labels("invalid-file", "") }),
                        (0, jsx_runtime_1.jsx)("div", {
                            children:
                                error === "invalid-amount"
                                    ? props.labels("invalid-amount", "")
                                    : error === "invalid-extension"
                                    ? props.labels("invalid-extension", "")
                                    : error === "invalid-size"
                                    ? props.labels("invalid-size", "")
                                    : props.labels("error", error),
                        }),
                        (0, jsx_runtime_1.jsx)(button_1.ButtonFabric, {
                            styles: {
                                baseColor: baseColor,
                                mode: "outline",
                            },
                            tabIndex: props.tabIndex || 0,
                            label: props.labels("retry", ""),
                            onClick: function () {
                                return setError("");
                            },
                        }),
                    ],
                }),
            props.controller.fileSlot.hasValue &&
                !error &&
                progress === -1 &&
                (0, jsx_runtime_1.jsxs)(FilePreviewElement, {
                    onDragOver: function (e) {
                        e.preventDefault();
                    },
                    onDrop: function (e) {
                        e.preventDefault();
                    },
                    $scale: props.styles.scale || 1,
                    children: [
                        props.controller.isImage
                            ? (0, jsx_runtime_1.jsx)(exports.FileThumbnailFabric, {
                                  controller: props.controller,
                                  service: props.service,
                                  loading: file_1.fileIcon,
                                  error: file_1.fileIcon,
                              })
                            : file_1.fileIcon,
                        (0, jsx_runtime_1.jsx)("div", { children: props.controller.fileSlot.string }),
                        (0, jsx_runtime_1.jsx)(button_1.ButtonFabric, {
                            styles: {
                                baseColor: baseColor,
                                mode: "outline",
                            },
                            tabIndex: props.tabIndex || 0,
                            label: props.labels("delete", ""),
                            disabled: deleting,
                            onClick: handleDelete,
                        }),
                    ],
                }),
        ],
    });
};
exports.FileFabric = FileFabric;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;
