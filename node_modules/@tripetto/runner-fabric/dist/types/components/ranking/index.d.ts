import { FocusEvent } from "react";
import { TSerializeTypes } from "@tripetto/runner";
import { color } from "../../color";
export interface IRankingOption {
    readonly id: string;
    readonly name: string;
    readonly value?: string;
    readonly label?: string | JSX.Element;
    readonly description?: string | JSX.Element;
}
export declare const RankingFabric: (props: {
    readonly styles: {
        readonly color: string;
        readonly outlineSize?: number;
        readonly roundness?: number;
        readonly scale?: number;
        readonly margin?: number;
    };
    readonly options: IRankingOption[];
    readonly slots?:
        | {
              reference?: string | undefined;
              readonly key: string;
              readonly isLocked: boolean;
              readonly isFrozen: boolean;
              readonly set: (value: TSerializeTypes, reference?: string, display?: string) => void;
          }[]
        | undefined;
    readonly disabled?: boolean | undefined;
    readonly readOnly?: boolean | undefined;
    readonly ariaDescribedBy?: string | undefined;
    readonly tabIndex?: number | undefined;
    readonly onFocus?: ((e: FocusEvent) => void) | undefined;
    readonly onBlur?: ((e: FocusEvent) => void) | undefined;
    readonly onAutoFocus?: ((el: HTMLButtonElement | null) => void) | undefined;
    readonly onSubmit?: (() => void) | undefined;
    readonly onCancel?: (() => void) | undefined;
}) => import("react/jsx-runtime").JSX.Element;
