import { FocusEvent, MutableRefObject } from "react";
export declare const setReturnValue: <T>(setValue: (value: T) => void, value: T | void) => void;
export declare const handleEvent: <T>(
    setValue: (value: T) => void,
    event?: ((e: FocusEvent) => T | void) | undefined
) => (e: FocusEvent) => void;
export declare const handleFocus: <T>(
    setFocus: (focus: boolean) => void,
    setValue: (value: T) => void,
    event?: ((e: FocusEvent) => T | void) | undefined
) => (e: FocusEvent) => void;
export declare const handleBlur: <T>(
    setFocus: (focus: boolean) => void,
    setValue: (value: T) => void,
    event?: ((e: FocusEvent) => T | void) | undefined
) => (e: FocusEvent) => void;
export declare const handleAutoSubmit: (
    autoSubmitRef: MutableRefObject<{
        id: number;
        cb?: () => void;
    }>
) => void;
