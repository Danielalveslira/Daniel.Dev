import { useRef } from "react";

const useL10n = (initialL10n, onL10n, runner, purgeCache) => {
    const l10n = useRef(initialL10n || {});
    const updateRef = useRef();
    const setL10n = (l) => {
        l10n.current = l;
        if (updateRef.current) {
            updateRef.current();
        }
    };
    updateRef.current = () => {
        if (purgeCache) {
            purgeCache();
        }
        runner.update();
    };
    return [
        l10n.current,
        (l) => {
            if (onL10n) {
                onL10n(l)
                    .then(() => setL10n(l))
                    .catch(() => setL10n(l));
            } else {
                setL10n(l);
            }
        },
        (language) => {
            if (
                onL10n &&
                ((l10n.current.language !== "auto" && l10n.current.language) ||
                    language ||
                    navigator.language) !== runner.l10n.current
            ) {
                onL10n(l10n.current).then(() => {
                    if (updateRef.current) {
                        updateRef.current();
                    }
                });
            }
        },
    ];
};

export { useL10n };
